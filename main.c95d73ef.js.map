{"version":3,"sources":["scripts/main.js"],"names":["table","document","getElementsByTagName","rowsBody","tBodies","rows","rowsHead","tHead","rowsFooter","tFoot","insertAfter","cells","length","cloneColumn","cloneIndex","afterPosition","tr","clone","cloneNode","children","after"],"mappings":";AAAA,aAoBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlBD,IAAMA,EAAQC,SAASC,qBAAqB,SAEtCC,EAAWH,EAAM,GAAGI,QAAQ,GAAGC,KAC/BC,EAAWN,EAAM,GAAGO,MAAMF,KAC1BG,EAAaR,EAAM,GAAGS,MAAMJ,KAE5BK,EAAcP,EAAS,GAAGQ,MAAMC,OAAS,EAM/C,SAASC,EAAYR,EAAMS,EAAYC,GACpBV,IADmC,EACnCA,EAAAA,EAAAA,GADmC,IAC7B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZW,IAAAA,EAAY,EAAA,MACfC,EAAQD,EAAGL,MAAMG,GAAYI,WAAU,GAE7CF,EAAGG,SAASJ,GAAeK,MAAMH,IAJiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAJtDJ,EAAYV,EAAU,EAAGO,GACzBG,EAAYP,EAAU,EAAGI,GACzBG,EAAYL,EAAY,EAAGE","file":"main.c95d73ef.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.getElementsByTagName('table');\n\nconst rowsBody = table[0].tBodies[0].rows;\nconst rowsHead = table[0].tHead.rows;\nconst rowsFooter = table[0].tFoot.rows;\n\nconst insertAfter = rowsBody[0].cells.length - 2;\n\ncloneColumn(rowsBody, 1, insertAfter);\ncloneColumn(rowsHead, 1, insertAfter);\ncloneColumn(rowsFooter, 1, insertAfter);\n\nfunction cloneColumn(rows, cloneIndex, afterPosition) {\n  for (const tr of rows) {\n    const clone = tr.cells[cloneIndex].cloneNode(true);\n\n    tr.children[afterPosition].after(clone);\n  }\n}\n"]}